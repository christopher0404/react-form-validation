{"version":3,"sources":["EntryForm.js","App.js","reportWebVitals.js","index.js"],"names":["StyledForm","styled","form","FormTitle","h1","StyledInputGroup","div","StyledLabel","label","StyledInput","input","props","isEmpty","isValid","ErrorMessage","p","textAlign","StyledSelect","select","StyledSmallLabel","StyledTextArea","textarea","StyledButton","button","InputGroup","type","name","value","onChange","onBlur","placeholder","htmlFor","id","EntryForm","handleSubmit","event","preventDefault","state","competitor","email","phoneNumber","danceStyle","group","agreeToPrivacyPolicy","userInputNames","Object","keys","userInputValues","values","i","length","userInputName","setState","alert","handleInputChange","target","checked","test","handleInputBlur","message","this","onSubmit","rows","Component","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bbdcd875.chunk.js","sourcesContent":["import { Component } from 'react';\nimport styled from 'styled-components';\n\nconst StyledForm = styled.form`\n  margin: 0 auto;\n  max-width: 32rem;\n`;\n\nconst FormTitle = styled.h1`\n  font-size: 2rem;\n  margin-bottom: 2.5rem;\n`;\n\nconst StyledInputGroup = styled.div`\n  margin-bottom: 1.5rem;\n`;\n\nconst StyledLabel = styled.label`\n  display: block;\n  margin-bottom: 0.75rem;\n  font-size: 1.5rem;\n  font-weight: 600;\n`;\n\nconst StyledInput = styled.input`\n  margin-bottom: 0.25rem;\n  border: 1px solid #4C566A;\n  border-radius: 0.5rem;\n  padding: 0.75rem 1rem;\n  width: 100%;\n  font-size: 1rem;\n  letter-spacing: 1px;\n  transition: background 1s;\n\n  &:focus,\n  &:hover {\n    background: #fafafa;\n  }\n\n  ${props => (props.isEmpty || !props.isValid) && `\n    border-color: #BF616A;\n  `}\n`;\n\nconst ErrorMessage = styled.p`\n  color: #BF616A;\n  text-align: right;\n\n  ${props => (props.textAlign === 'left') && `\n    text-align: left;\n  `}\n`;\n\nconst StyledSelect = styled.select`\n  border-radius: 0.5rem;\n  padding: 0.5rem;\n  font-size: 1.25rem;\n  cursor: pointer;\n`;\n\nconst StyledSmallLabel = styled.label`\n  margin-left: 0.5rem;\n  font-size: 1.125rem;\n  cursor: pointer;\n`;\n\nconst StyledTextArea = styled.textarea`\n  resize: vertical;\n  border-radius: 0.5rem;\n  padding: 1rem;\n  width: 100%;\n  font-size: 1.25rem;\n  line-height: 1.25;\n  letter-spacing: 1px;\n`;\n\nconst StyledButton = styled.button`\n  border: 1px solid #4C566A;\n  border-radius: 0.5rem;\n  padding: 0.75rem 1.5rem;\n  background: #4C566A;\n  color: #fff;\n  font-size: 1.125rem;\n  font-weight: bold;\n`;\n\nconst InputGroup = ({ label, type, name, value, onChange, onBlur, isEmpty, isValid, placeholder }) => (\n  <StyledInputGroup>\n    <StyledLabel htmlFor={name}>{label}</StyledLabel>\n    <StyledInput type={type} name={name} id={name} value={value} onChange={onChange} onBlur={onBlur} isEmpty={isEmpty} isValid={isValid} placeholder={placeholder} />\n    {isEmpty && <ErrorMessage>field required</ErrorMessage>}\n    {!isValid && <ErrorMessage>wrong format</ErrorMessage>}\n  </StyledInputGroup>\n);\n\nconst isEmailValid = email => {\n  const regex = /^\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/;\n  return regex.test(email);\n}\n\nconst isPhoneNumberValid = phoneNumber => {\n  const regex = /^09\\d{2}-?\\d{3}-?\\d{3}$/;\n  return regex.test(phoneNumber);\n}\n\nclass EntryForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      competitor: {\n        value: '',\n        isEmpty: false,\n      },\n      email: {\n        value: '',\n        isEmpty: false,\n        isValid: true,\n      },\n      phoneNumber: {\n        value: '',\n        isEmpty: false,\n        isValid: true,\n      },\n      danceStyle: {\n        value: 'Freestyle',\n      },\n      group: {\n        value: 'Upper Division',\n      },\n      message: {\n        value: '',\n      },\n      agreeToPrivacyPolicy: {\n        value: false,\n        isEmpty: false,\n      },\n    }\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { competitor, email, phoneNumber, danceStyle, group, agreeToPrivacyPolicy } = this.state;\n    const userInputNames = Object.keys(this.state);\n    const userInputValues = Object.values(this.state);\n\n    for (let i = 0; i < userInputNames.length; i += 1) {\n      const userInputName = userInputNames[i]\n      const userInputValue = userInputValues[i];\n\n      if (!userInputValue.value) {\n        this.setState({\n          [userInputName]: {\n            ...this.state[userInputName],\n            isEmpty: true,\n          }\n        });\n      }\n    }\n\n    if (!competitor.value || !email.value || !email.isValid || !phoneNumber.value || !phoneNumber.isValid || !agreeToPrivacyPolicy.value) return;\n\n    alert(`\n      Name: ${competitor.value}\n      Email: ${email.value}\n      Phone: ${phoneNumber.value}\n      Dance Style: ${danceStyle.value}\n      Group: ${group.value}\n    `);\n  }\n\n  handleInputChange = event => {\n    const { target } = event;\n    const { name } = target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n\n    this.setState({\n      [name]: {\n        ...this.state[name],\n        value,\n        isEmpty: false,\n      }\n    });\n\n    if (name === 'email') {\n      this.setState({\n        [name]: {\n          value,\n          isEmpty: false,\n          isValid: isEmailValid(value),\n        }\n      });\n    }\n\n    if (name === 'phoneNumber') {\n      this.setState({\n        [name]: {\n          value,\n          isEmpty: false,\n          isValid: isPhoneNumberValid(value),\n        }\n      });\n    }\n  }\n\n  handleInputBlur = event => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: {\n        ...this.state[name],\n        isEmpty: value ? false : true,\n      }\n    });\n  }\n\n  render() {\n    const { competitor, email, phoneNumber, danceStyle, group, agreeToPrivacyPolicy, message } = this.state;\n\n    return (\n      <StyledForm onSubmit={this.handleSubmit}>\n        <FormTitle>All Styles Dance Battle</FormTitle>\n\n        <InputGroup label=\"Name\" type=\"text\" name=\"competitor\" value={competitor.value} onChange={this.handleInputChange} onBlur={this.handleInputBlur} isEmpty={competitor.isEmpty} isValid={true} />\n\n        <InputGroup label=\"Email\" type=\"email\" name=\"email\" value={email.value} onChange={this.handleInputChange} onBlur={this.handleInputBlur} isEmpty={email.isEmpty} isValid={email.isValid} placeholder=\"example@gmail.com\" />\n\n        <InputGroup label=\"Phone\" type=\"tel\" name=\"phoneNumber\" value={phoneNumber.value} onChange={this.handleInputChange} onBlur={this.handleInputBlur} isEmpty={phoneNumber.isEmpty} isValid={phoneNumber.isValid} placeholder=\"0987654321\" />\n\n        <StyledInputGroup>\n          <StyledLabel htmlFor=\"danceStyle\">Dance Style</StyledLabel>\n          <StyledSelect name=\"danceStyle\" value={danceStyle.value} id=\"danceStyle\" onChange={this.handleInputChange}>\n            <option value=\"Freestyle\">Freestyle</option>\n            <option value=\"Hip Hop\">Hip Hop</option>\n            <option value=\"House\">House</option>\n            <option value=\"Locking\">Locking</option>\n            <option value=\"Popping\">Popping</option>\n          </StyledSelect>\n        </StyledInputGroup>\n\n        <StyledInputGroup>\n          <StyledLabel>Group</StyledLabel>\n          <div>\n            <input type=\"radio\" name=\"group\" id=\"upperDivision\" value=\"Upper Division\" onChange={this.handleInputChange} checked={group.value === 'Upper Division'} />\n            <StyledSmallLabel htmlFor=\"upperDivision\">Upper Division (18 years old and older)</StyledSmallLabel>\n          </div>\n          <div>\n            <input type=\"radio\" name=\"group\" id=\"juniorDivision\" value=\"Junior Division\" onChange={this.handleInputChange} checked={group.value === 'Junior Division'} />\n            <StyledSmallLabel htmlFor=\"juniorDivision\">Junior Division (17 years old or younger)</StyledSmallLabel>\n          </div>\n        </StyledInputGroup>\n\n        <StyledInputGroup>\n          <StyledLabel>Message (optional)</StyledLabel>\n          <StyledTextArea rows=\"8\" name=\"message\" value={message.value} onChange={this.handleInputChange} />\n        </StyledInputGroup>\n\n        <StyledInputGroup>\n          <input type=\"checkbox\" name=\"agreeToPrivacyPolicy\" id=\"agreeToPrivacyPolicy\" checked={agreeToPrivacyPolicy.value} onChange={this.handleInputChange} />\n          <StyledSmallLabel htmlFor=\"agreeToPrivacyPolicy\">I agree to the Privacy Policy</StyledSmallLabel>\n          {agreeToPrivacyPolicy.isEmpty && <ErrorMessage textAlign=\"left\">Please check this field</ErrorMessage>}\n        </StyledInputGroup>\n\n        <StyledButton>Submit</StyledButton>\n      </StyledForm>\n    )\n  }\n}\n\nexport default EntryForm;\n","import { Component } from 'react';\nimport EntryForm from './EntryForm';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <EntryForm />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}